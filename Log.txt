http://www.ttufo.com/ufo/201408/47843.html




姬岛琉璃香
372422196809303616

 chmod -R 755 ./apache-tomcat-8.0.29/

adb shell getprop | grep dalvik.vm.heapgrowthlimit  手机默认app内存分配

adb shell dumpsys meminfo <package_name>






TCP的三次握手过程？为什么会采用三次握手，若采用二次握手可以吗？

答：建立连接的过程是利用客户服务器模式，假设主机A为客户端，主机B为服务器端。

（1）TCP的三次握手过程：主机A向B发送连接请求；主机B对收到的主机A的报文段进行确认；主机A再次对主机B的确认进行确认。

（2）采用三次握手是为了防止失效的连接请求报文段突然又传送到主机B，因而产生错误。失效的连接请求报文段是指：主机A发出的连接请求没有收到主机B的确认，于是经过一段时间后，主机A又重新向主机B发送连接请求，且建立成功，顺序完成数据传输。考虑这样一种特殊情况，主机A第一次发送的连接请求并没有丢失，而是因为网络节点导致延迟达到主机B，主机B以为是主机A又发起的新连接，于是主机B同意连接，并向主机A发回确认，但是此时主机A根本不会理会，主机B就一直在等待主机A发送数据，导致主机B的资源浪费。

（3）采用两次握手不行，原因就是上面说的失效的连接请求的特殊情况，因此采用三次握手刚刚好，两次可能出现失效，四次甚至更多次则没必要，反而复杂了。




lsof -i:8080  端口查看占用         //只能查看本用户下
netstat -tunlp

netstat -tunlp用于显示tcp，udp的端口和进程等相关情况，如下图    
netstat -tunlp|grep 端口号，用于查看指定端口号的进程情况，如查看22端口的情况，netstat -tunlp|grep 22，如下图



















<insert id="insertUser" paramClass="java.utill.map" resultClass="java.lang.Integer">
  insert ingore into user_info (userName,mobilePhone,passWord,sex)values(#userName#,#mobilePhone#,#passWord#,#sex#);
	<selectKey keyPropety="userInfoId" resultClass="java.lang.Integer">
	<![CDATA[
	     select LAST_INSERT_ID() AS userInfoId
	 ]]>
	<selectKey>
</insert>






<insert id="insertUser" paramClass="java.utill.map" resultClass="java.lang.Integer">
  insert  into userInfo（userName,mobilePhone,passWord,sex)select #userName#,#mobilePhone#,#passWord#,#sex# from dual
   where notEXISTS(SELECT userName,mobilePhone from userInfo where userName=#userName# and mobilePhone=#mobilePhone# )    
   <selectKey keyPropety="userInfoId" resultClass="java.lang.Integer">
		<![CDATA[
		select LAST_INSERT_ID() AS userInfoId
		 ]]>
	</selectKey>
</insert>



















